<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (C) 2007 The Android Open Source Project

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->

<!-- In-call Phone UI; see InCallUIActivity.java. -->
<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <LinearLayout
        android:id="@+id/call_info_container"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:orientation="vertical">

        <!-- Primary "Call info" block, for the foreground call. -->
        <include android:id="@+id/primary_call_info"
             layout="@layout/primary_call_info" />

        <!-- Secondary "Call info" block , for the background ("on hold") call. -->
        <ViewStub android:id="@+id/secondary_call_info"
             android:layout="@layout/secondary_call_info"
             android:layout_width="match_parent"
             android:layout_height="0dp"
             android:layout_weight="1" />

    </LinearLayout>

    <!-- In-call onscreen touch controls; see InCallTouchUi.java.
         This widget contains the cluster of buttons shown at the bottom
         of the in-call screen, and also the DTMF dialpad (which, when
         visible, covers the upper part of the screen too.) -->
    <include layout="@layout/incall_touch_ui"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        />

    <!-- The "Manage conference" UI.  This panel is displayed (and covers up
         the entire normal in-call UI) when the user clicks "Manage conference"
         during a GSM conference call. -->
    <ViewStub android:id="@+id/manageConferencePanelStub"
              android:layout="@layout/manage_conference_panel"
              android:layout_width="match_parent"
              android:layout_height="match_parent"
              />

</FrameLayout>
